{"version":3,"sources":["util/firebase.js","Menu.js","redux/SaveData/data.types.js","Edit.js","redux/SaveData/data.actions.js","App.js","reportWebVitals.js","redux/SaveData/data.reducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","useStyles","makeStyles","theme","root","width","flexGrow","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","paper","padding","spacing","textAlign","color","palette","text","secondary","Menu","classes","React","useState","todoList","setTodoList","useEffect","database","ref","on","snapshot","todos","val","menu","mergedArray","className","length","map","item","index","Accordion","AccordionSummary","expandIcon","id","Typography","AccordionDetails","elements","element","k","style","marginRight","name","price","to","NATURAL","MERGED","connect","state","naturalData","data","dispatch","useDispatch","value","setValue","save","setSave","saveJSONData","JSON","parse","_embedded","menu_items","categories","tempCategories","init","forEach","menu_categories","sort","arrayHashmap","obj","i","price_per_unit","reduce","push","Object","values","update","type","payload","saveMergedArray","count","rows","onChange","event","target","Button","variant","onClick","App","props","exact","path","component","Edit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","reducer","action","rootReducer","combineReducers","dataReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b619119f.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCecFPONmApcb-mDxLKq_d6sMJ3S-F4yL4\",\n  authDomain: \"json-manipulator.firebaseapp.com\",\n  projectId: \"json-manipulator\",\n  storageBucket: \"json-manipulator.appspot.com\",\n  messagingSenderId: \"82320750519\",\n  appId: \"1:82320750519:web:99f4913f170aec825fda32\",\n  measurementId: \"G-R5B0T63E3N\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport firebase from \"./util/firebase\";\nimport { Route, Link } from \"react-router-dom\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"30%\",\n    flexGrow: 1,\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"left\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction Menu() {\n  const classes = useStyles();\n  const [todoList, setTodoList] = React.useState();\n  useEffect(() => {\n    const todoRef = firebase.database().ref(\"json\");\n    todoRef.on(\"value\", (snapshot) => {\n      const todos = snapshot.val();\n      setTodoList(todos);\n    });\n  }, []);\n  const menu = todoList ? todoList.mergedArray : [];\n\n  return (\n    <div className={classes.root}>\n      {menu.length ? (\n        menu.map((item, index) => (\n          <div key={index}>\n            <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n              >\n                <Typography className={classes.heading}>{item.id}</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Typography>\n                  {item.elements.map((element, k) => (\n                    <div key={k}>\n                      <span style={{ marginRight: \"15px\" }}>{element.id}</span>\n                      <span style={{ marginRight: \"15px\" }}>\n                        {element.name}\n                      </span>\n                      <span>${element.price / 100}</span>\n                    </div>\n                  ))}\n                </Typography>\n              </AccordionDetails>\n            </Accordion>\n          </div>\n        ))\n      ) : (\n        <div></div>\n      )}\n      <br></br>\n      <br></br>\n      <Route>{menu ? <Link to=\"/\">Back</Link> : \"\"}</Route>\n      <br></br>\n      <br></br>\n      <br></br>\n    </div>\n  );\n}\n\nexport default Menu;\n","export const NATURAL = \"NATURAL\";\nexport const MERGED = \"MERGED\";\n","import React from \"react\";\nimport \"./App.css\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Route, Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport firebase from \"./util/firebase\";\nimport {\n  saveNaturalData,\n  saveMergedArray,\n} from \"./redux/SaveData/data.actions\";\n\nfunction App({ naturalData }) {\n  const dispatch = useDispatch();\n  const [value, setValue] = React.useState(naturalData);\n  const [save, setSave] = React.useState(false);\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const saveJSONData = () => {\n    var menu = JSON.parse(value)._embedded.menu_items;\n    var categories = [];\n    var tempCategories = [];\n    var init = 0;\n\n    menu.forEach((item) => {\n      item._embedded.menu_categories.forEach((element) => {\n        tempCategories[init] = element.name;\n        categories[init] = item;\n        init++;\n      });\n    });\n\n    tempCategories = tempCategories.sort();\n    const tempItems = categories.map((obj, i) => {\n      return {\n        id: tempCategories[i],\n        elements: [{ id: obj.id, name: obj.name, price: obj.price_per_unit }],\n      };\n    });\n\n    const arrayHashmap = tempItems.reduce((obj, item) => {\n      obj[item.id]\n        ? obj[item.id].elements.push(...item.elements)\n        : (obj[item.id] = { ...item });\n      return obj;\n    }, {});\n\n    const mergedArray = Object.values(arrayHashmap);\n\n    const todoRef = firebase.database().ref(\"json\");\n    todoRef.update({\n      mergedArray,\n    });\n\n    dispatch(saveNaturalData({ naturalData: value }));\n    dispatch(saveMergedArray({ count: mergedArray }));\n    setSave(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <br></br>\n      <br></br>\n      <br></br>\n      <textarea rows=\"40\" style={{ width: \"80%\" }} onChange={handleChange}>\n        {value ? value : {}}\n      </textarea>\n      <br></br>\n      <br></br>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => saveJSONData()}\n      >\n        {save ? \"Saved\" : \"Save\"}\n      </Button>\n      <br></br>\n      <br></br>\n      <Route>\n        <Link to=\"/menu\">Go to Menu</Link>\n      </Route>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    naturalData: state.data.naturalData\n      ? state.data.naturalData.naturalData\n      : [],\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import { NATURAL, MERGED } from \"./data.types\";\n\nexport const saveNaturalData = (payload) => {\n  return {\n    type: NATURAL,\n    payload,\n  };\n};\n\nexport const saveMergedArray = (payload) => {\n  return {\n    type: MERGED,\n    payload,\n  };\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Menu from \"./Menu\";\nimport Edit from \"./Edit\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Edit} />\n          <Route path=\"/menu\" component={Menu} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { NATURAL, MERGED } from \"./data.types\";\n\nconst INITIAL_STATE = {\n  data: {},\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case NATURAL:\n      return {\n        ...state,\n        naturalData: action.payload,\n      };\n\n    case MERGED:\n      return {\n        ...state,\n        data: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\n\nimport dataReducer from \"./SaveData/data.reducer\";\n\nconst rootReducer = combineReducers({\n  data: dataReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport rootReducer from \"./rootReducer\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}